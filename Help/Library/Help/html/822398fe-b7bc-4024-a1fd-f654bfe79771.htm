<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>How to discover Alpaca devices (polling and events)</title><meta name="Microsoft.Help.Id" content="822398fe-b7bc-4024-a1fd-f654bfe79771" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Description" content="This topic describes how to discover Alpaca devices and options for creating Alpaca clients to communicate with them. Please see Alpaca devices and ASCOM devices for information on the Alpaca device / ASCOM device terminology." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">ASCOM Library<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/3e0a4970-b422-4427-bb1e-789bb79e1b4f.htm" title="ASCOM Library" tocid="roottoc">ASCOM Library</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/3e0a4970-b422-4427-bb1e-789bb79e1b4f.htm" title="Introduction" tocid="3e0a4970-b422-4427-bb1e-789bb79e1b4f">Introduction</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/cf197185-7fa2-4b56-bb1a-75aaebd459bb.htm" title="Version History" tocid="cf197185-7fa2-4b56-bb1a-75aaebd459bb">Version History</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/448ecc79-4087-401f-97ca-3e2af8022a62.htm" title="What is in each ASCOM Library package" tocid="448ecc79-4087-401f-97ca-3e2af8022a62">What is in each ASCOM Library package</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/d0969e72-58ac-4f66-b725-8147769b8c5f.htm" title="Asynchronous Library Methods (async await)" tocid="20730441-c717-4b28-8bd5-fc955fc2bf81">Asynchronous Library Methods (async await)</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="../html/822398fe-b7bc-4024-a1fd-f654bfe79771.htm" title="How to discover Alpaca devices (polling and events)" tocid="822398fe-b7bc-4024-a1fd-f654bfe79771">How to discover Alpaca devices (polling and events)</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/12148518-094b-48a0-a947-05b4d987c037.htm" title="How to create clients for discovered Alpaca devices" tocid="12148518-094b-48a0-a947-05b4d987c037">How to create clients for discovered Alpaca devices</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/1F10A6D1-2BD4-4570-8465-74FEC23F7AE2.htm" title="How to make Alpaca devices and COM drivers appear the same" tocid="1F10A6D1-2BD4-4570-8465-74FEC23F7AE2">How to make Alpaca devices and COM drivers appear the same</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/12358d8f-2ed9-4144-95a1-f23df8b29ab5.htm" title="How to let the user select an Alpaca device" tocid="12358d8f-2ed9-4144-95a1-f23df8b29ab5">How to let the user select an Alpaca device</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/833dd117-2e34-412d-8d52-4f3fd2dee3b1.htm" title="Terminology: The difference between Alpaca Devices and ASCOM Devices" tocid="833dd117-2e34-412d-8d52-4f3fd2dee3b1">Terminology: The difference between Alpaca Devices and ASCOM Devices</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_ASCOMLibrary.htm" title="ASCOM Library APIs" tocid="R_Project_ASCOMLibrary">ASCOM Library APIs</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>How to discover Alpaca devices (polling and events)</h1></td></tr></table><div><p>
				This topic describes how to discover Alpaca devices and options for creating Alpaca clients to communicate with them.
				Please see <a href="833dd117-2e34-412d-8d52-4f3fd2dee3b1.htm">Alpaca devices and ASCOM devices</a> for information on the Alpaca device / ASCOM device terminology.
			</p></div><div class="collapsibleAreaRegion" id="WorkingWithDevices"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBAB')" onkeypress="SectionExpandCollapse_CheckKey('IDBAB', event)" tabindex="0"><img id="IDBABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />How to discover Alpaca devices.</span></div><div id="IDBABSection" class="collapsibleSection"><p>
					Alpaca devices that support network discovery can be detected using the <span class="noLink">AlpacaDiscovery</span> class.
				</p><p>
					The AlpacaDiscovery class supports two ways to discover devices:
					<ul><li>Synchronous Discovery</li><li>Asynchronous Discovery</li></ul>
					The following examples illustrate the synchronous discovery pattern where a discovery is initiated and the initiating thread blocks while waiting for the discovery to complete.
					<div id="IDDBBBAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDDBBBAB_tab1" class="codeSnippetContainerTabSingle">Synchronous Discovery</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDDBBBAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDDBBBAB');return false;" title="Copy">Copy</a></div></div><div id="IDDBBBAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Create a Discovery component that can be used for one or more discoveries</span>
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (AlpacaDiscovery alpacaDiscovery = <span class="highlight-keyword">new</span> AlpacaDiscovery())
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Start a discovery with default parameter values</span>
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    alpacaDiscovery.StartDiscovery();
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Wait for the discovery to complete, testing the completion variable every 50ms.</span>
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">do</span>
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        Thread.Sleep(<span class="highlight-number">50</span>);
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    } <span class="highlight-keyword">while</span> (!alpacaDiscovery.DiscoveryComplete);
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Get lists of discovered Telescope and FilterWheel devices and print counts of each</span>
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    List&lt;AscomDevice&gt; telescopeDevices1 = alpacaDiscovery.GetAscomDevices(DeviceTypes.Telescope);
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    List&lt;AscomDevice&gt; filterWheelDevices1 = alpacaDiscovery.GetAscomDevices(DeviceTypes.FilterWheel);
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    Console.WriteLine($<span class="highlight-literal">"Found {telescopeDevices1.Count} Telescope devices and {filterWheelDevices1.Count} FilterWheel devices."</span>);
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Start a discovery with specified parameters</span>
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    alpacaDiscovery.StartDiscovery(<span class="highlight-number">2</span>, <span class="highlight-number">100</span>, <span class="highlight-number">32227</span>, <span class="highlight-number">1.5</span>, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">true</span>, <span class="highlight-keyword">false</span>, ServiceType.Http);
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Wait for the discovery to complete, testing the completion variable every 50ms.</span>
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">do</span>
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        Thread.Sleep(<span class="highlight-number">50</span>);
<span class="highlight-lineno">25</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    } <span class="highlight-keyword">while</span> (!alpacaDiscovery.DiscoveryComplete);
<span class="highlight-lineno">26</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">27</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Get lists of discovered Telescope and FilterWheel devices and print counts of each</span>
<span class="highlight-lineno">28</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    List&lt;AscomDevice&gt; telescopeDevices2 = alpacaDiscovery.GetAscomDevices(DeviceTypes.Telescope);
<span class="highlight-lineno">29</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    List&lt;AscomDevice&gt; filterWheelDevices2 = alpacaDiscovery.GetAscomDevices(DeviceTypes.FilterWheel);
<span class="highlight-lineno">30</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    Console.WriteLine($<span class="highlight-literal">"Found {telescopeDevices2.Count} Telescope devices and {filterWheelDevices2.Count} FilterWheel devices."</span>);
<span class="highlight-lineno">31</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre></div></div></div></p><p>
					This example illustrates the asynchronous, event based, discovery pattern where the application adds a callback to the
					<span class="noLink">DiscoveryCompleted Event</span> before initiating
					the discovery and then continuing with its own processing.
					When the discovery is complete the callback will be called and the application can use the returned information.
					<div id="IDDCBBAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDDCBBAB_tab1" class="codeSnippetContainerTabSingle">Asynchronous Discovery</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDDCBBAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDDCBBAB');return false;" title="Copy">Copy</a></div></div><div id="IDDCBBAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">internal</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> AsynchronousDiscovery()
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Create a Discovery component that can be used for one or more discoveries</span>
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    AlpacaDiscovery alpacaDiscovery = <span class="highlight-keyword">new</span> AlpacaDiscovery();
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Add an event handler that will be called when discovery is complete.</span>
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    alpacaDiscovery.DiscoveryCompleted += DiscoveryCompletedEventHandler;
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Start a discovery using specified parameters:</span>
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    alpacaDiscovery.StartDiscovery(<span class="highlight-number">2</span>, <span class="highlight-number">100</span>, <span class="highlight-number">32227</span>, <span class="highlight-number">1.5</span>, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">true</span>, <span class="highlight-keyword">false</span>, ASCOM.Common.Alpaca.ServiceType.Http);
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Continue with other processing while the discovery is running</span>
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// The DiscoveryCompletedEventHandler method will be called when discovery completes</span>
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">//TODO: Dispose of the alpacaDiscovery object when it is no longer required</span>
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">///&lt;summary&gt;</span>
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">///Event handler called when the configured discovery time is reached</span>
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">///&lt;/summary&gt;</span>
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> DiscoveryCompletedEventHandler(<span class="highlight-keyword">object</span>? sender, EventArgs e)
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Ensure that the sender is an AlpacaDiscovery object</span>
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">if</span> (sender <span class="highlight-keyword">is</span> AlpacaDiscovery alpacaDiscovery)
<span class="highlight-lineno">25</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">26</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>         <span class="highlight-comment">// Get a list of available FilterWheel devices and print the number of devices found</span>
<span class="highlight-lineno">27</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        List&lt;AscomDevice&gt; filterWheelDevices = alpacaDiscovery.GetAscomDevices(DeviceTypes.FilterWheel);
<span class="highlight-lineno">28</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        Console.WriteLine($<span class="highlight-literal">"Found {filterWheelDevices.Count} FilterWheel devices."</span>);
<span class="highlight-lineno">29</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">30</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre></div></div></div></p>

				Please see <a href="d0969e72-58ac-4f66-b725-8147769b8c5f.htm">How to discover Alpaca devices asynchronously</a> for information on the library's task based asynchronous methods.

			</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Other Resources</h4><div><a href="833dd117-2e34-412d-8d52-4f3fd2dee3b1.htm">Terminology: The difference between Alpaca Devices and ASCOM Devices</a></div></div></div></div><div id="PageFooter" class="pageFooter">Version 1.0.52<p><a href="www.ascom-standards.org" target="_blank" rel="noopener noreferrer">Copyright © 2021 - 2022 ASCOM Initiative</a></p></div></body></html>