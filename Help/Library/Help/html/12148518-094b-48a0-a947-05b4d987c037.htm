<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>How to create clients for discovered Alpaca devices</title><meta name="Microsoft.Help.Id" content="12148518-094b-48a0-a947-05b4d987c037" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Description" content="This topic describes how to create Alpaca clients for discovered ASCOM devices. Please see Alpaca devices and ASCOM devices for information on the Alpaca device / ASCOM device terminology." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">ASCOM Library<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/3e0a4970-b422-4427-bb1e-789bb79e1b4f.htm" title="ASCOM Library" tocid="roottoc">ASCOM Library</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/3e0a4970-b422-4427-bb1e-789bb79e1b4f.htm" title="Introduction" tocid="3e0a4970-b422-4427-bb1e-789bb79e1b4f">Introduction</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/cf197185-7fa2-4b56-bb1a-75aaebd459bb.htm" title="Version History" tocid="cf197185-7fa2-4b56-bb1a-75aaebd459bb">Version History</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/448ecc79-4087-401f-97ca-3e2af8022a62.htm" title="What is in each ASCOM Library package" tocid="448ecc79-4087-401f-97ca-3e2af8022a62">What is in each ASCOM Library package</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/d0969e72-58ac-4f66-b725-8147769b8c5f.htm" title="Asynchronous Library Methods (async await)" tocid="20730441-c717-4b28-8bd5-fc955fc2bf81">Asynchronous Library Methods (async await)</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/822398fe-b7bc-4024-a1fd-f654bfe79771.htm" title="How to discover Alpaca devices (polling and events)" tocid="822398fe-b7bc-4024-a1fd-f654bfe79771">How to discover Alpaca devices (polling and events)</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="../html/12148518-094b-48a0-a947-05b4d987c037.htm" title="How to create clients for discovered Alpaca devices" tocid="12148518-094b-48a0-a947-05b4d987c037">How to create clients for discovered Alpaca devices</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/1F10A6D1-2BD4-4570-8465-74FEC23F7AE2.htm" title="How to make Alpaca devices and COM drivers appear the same" tocid="1F10A6D1-2BD4-4570-8465-74FEC23F7AE2">How to make Alpaca devices and COM drivers appear the same</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/12358d8f-2ed9-4144-95a1-f23df8b29ab5.htm" title="How to let the user select an Alpaca device" tocid="12358d8f-2ed9-4144-95a1-f23df8b29ab5">How to let the user select an Alpaca device</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/833dd117-2e34-412d-8d52-4f3fd2dee3b1.htm" title="Terminology: The difference between Alpaca Devices and ASCOM Devices" tocid="833dd117-2e34-412d-8d52-4f3fd2dee3b1">Terminology: The difference between Alpaca Devices and ASCOM Devices</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_ASCOMLibrary.htm" title="ASCOM Library APIs" tocid="R_Project_ASCOMLibrary">ASCOM Library APIs</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>How to create clients for discovered Alpaca devices</h1></td></tr></table><div><p>
				This topic describes how to create Alpaca clients for discovered ASCOM devices. Please see <a href="833dd117-2e34-412d-8d52-4f3fd2dee3b1.htm">Alpaca devices and ASCOM devices</a> for information on the Alpaca device / ASCOM device terminology.
			</p></div><div class="collapsibleAreaRegion" id="WorkingWithDevices"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBAB')" onkeypress="SectionExpandCollapse_CheckKey('IDBAB', event)" tabindex="0"><img id="IDBABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />How to create Alpaca clients for discovered Alpaca devices.</span></div><div id="IDBABSection" class="collapsibleSection"><p>
					The <span class="noLink">AlpacaClient Class</span> provides several static generic methods enabling simple or complex
					client creation.
					The following example illustrates a simple scenario where client creation just requires an <span class="noLink">AscomDevice</span>
					instance provided by the
					<span class="noLink">AlpacaDiscovery.GetAscomDevices(DeviceTypes)</span> method.
					If required, default parameter values can be changed after the device has been created through the
					<span class="noLink">AlpacaDevice.ClientConfiguration</span> property.
				</p><p><div id="IDABBBAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDABBBAB_tab1" class="codeSnippetContainerTabSingle">Simple client creation from a discovered ASCOM device.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDABBBAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDABBBAB');return false;" title="Copy">Copy</a></div></div><div id="IDABBBAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Create a TraceLogger to record operational library messages</span>
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (TraceLogger logger = <span class="highlight-keyword">new</span> TraceLogger(<span class="highlight-literal">"SimpleClient"</span>, <span class="highlight-keyword">true</span>))
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Get a list of filter wheel devices and record the number of devices discovered</span>
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    List&lt;AscomDevice&gt; filterWheelDevices = <span class="highlight-keyword">await</span> AlpacaDiscovery.GetAscomDevicesAsync(DeviceTypes.FilterWheel);
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    logger.LogMessage(<span class="highlight-literal">"SimpleClient"</span>, $<span class="highlight-literal">"Found {filterWheelDevices.Count} FilterWheel devices."</span>);
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Create an Alpaca client for the first device and use it to display the driver description</span>
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">if</span> (filterWheelDevices.Count &gt; <span class="highlight-number">0</span>)
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-comment">// Create the filter wheel Alpaca Client</span>
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">using</span> (AlpacaFilterWheel filterWheelClient = AlpacaClient.GetDevice&lt;AlpacaFilterWheel&gt;(filterWheelDevices.First(), logger: logger))
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        {
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            <span class="highlight-comment">// Connect to the Alpaca device</span>
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            filterWheelClient.Connected = <span class="highlight-keyword">true</span>;
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            <span class="highlight-comment">// Record some information</span>
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            logger.LogMessage(<span class="highlight-literal">"SimpleClient"</span>, $<span class="highlight-literal">"Found device: {filterWheelClient.Name} - Driver: {filterWheelClient.DriverInfo}, Version: {filterWheelClient.DriverVersion} containing {filterWheelClient.Names.Count()} filters."</span>);
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            <span class="highlight-comment">// Disconnect from the filter wheel</span>
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            filterWheelClient.Connected = <span class="highlight-keyword">false</span>;
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        }
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">25</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre></div></div></div></p><p>
					This example illustrates a detailed scenario that requires an <span class="noLink">AscomDevice</span> instance together with other configuration values.
				</p><p><div id="IDADBBAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADBBAB_tab1" class="codeSnippetContainerTabSingle">Detailed client creation from a discovered ASCOM device.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADBBAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADBBAB');return false;" title="Copy">Copy</a></div></div><div id="IDADBBAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Create a TraceLogger to record operational library messages</span>
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (TraceLogger logger = <span class="highlight-keyword">new</span> TraceLogger(<span class="highlight-literal">"DetailedClient"</span>, <span class="highlight-keyword">true</span>))
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Get a list of available focuser devices</span>
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    List&lt;AscomDevice&gt; focuserDevices = <span class="highlight-keyword">await</span> AlpacaDiscovery.GetAscomDevicesAsync(DeviceTypes.Focuser, logger: logger);
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    logger.LogMessage(<span class="highlight-literal">"DetailedClient"</span>, $<span class="highlight-literal">"Found {focuserDevices.Count} Focuser devices."</span>);
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Create a focuser client for the first device in the list and use it to display device information</span>
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">if</span> (focuserDevices.Count &gt; <span class="highlight-number">0</span>) <span class="highlight-comment">// There is at least one Alpaca device</span>
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-comment">// Create a focuser client specifying all parameters</span>
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">using</span> (AlpacaFocuser focuserClient = AlpacaClient.GetDevice&lt;AlpacaFocuser&gt;(focuserDevices.First(), <span class="highlight-number">3</span>, <span class="highlight-number">5</span>, <span class="highlight-number">100</span>, <span class="highlight-number">23549</span>, <span class="highlight-literal">"QuY89"</span>, <span class="highlight-literal">"YYu8*9jK"</span>, <span class="highlight-keyword">true</span>, logger))
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        {
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            <span class="highlight-comment">// Connect to the Alpaca device</span>
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            focuserClient.Connected = <span class="highlight-keyword">true</span>;
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            <span class="highlight-comment">// Record some information</span>
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            logger.LogMessage(<span class="highlight-literal">"DetailedClient"</span>, $<span class="highlight-literal">"Found device: {focuserClient.Name} - Driver: {focuserClient.DriverInfo}, Version: {focuserClient.DriverVersion}, Focuser position: {focuserClient.Position}."</span>);
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            <span class="highlight-comment">// Disconnect from the focuser</span>
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            focuserClient.Connected = <span class="highlight-keyword">false</span>;
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        }
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">else</span> <span class="highlight-comment">// No devices were discovered</span>
<span class="highlight-lineno">25</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">26</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        logger.LogMessage(<span class="highlight-literal">"DetailedClient"</span>, $<span class="highlight-literal">"No Focuser devices were discovered."</span>);
<span class="highlight-lineno">27</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">28</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre></div></div></div></p><p>
					Finally, this example illustrates a manual creation scenario where all parameters are supplied individually.
				</p><p><div id="IDAFBBAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAFBBAB_tab1" class="codeSnippetContainerTabSingle">Detailed manual client creation.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAFBBAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAFBBAB');return false;" title="Copy">Copy</a></div></div><div id="IDAFBBAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Create a trace logger</span>
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (TraceLogger logger = <span class="highlight-keyword">new</span> TraceLogger(<span class="highlight-literal">"ManualClient"</span>, <span class="highlight-keyword">true</span>))
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Create the telescope Alpaca Client with specified parameters</span>
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">using</span> (AlpacaTelescope telescopeClient = AlpacaClient.GetDevice&lt;AlpacaTelescope&gt;(ServiceType.Http, <span class="highlight-literal">"127.0.0.1"</span>, <span class="highlight-number">11111</span>, <span class="highlight-number">0</span>, <span class="highlight-number">3</span>, <span class="highlight-number">5</span>, <span class="highlight-number">100</span>, <span class="highlight-number">34892</span>, <span class="highlight-literal">"QuY89"</span>, <span class="highlight-literal">"YYu8*9jK"</span>, <span class="highlight-keyword">true</span>, logger))
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-comment">// Connect to the Alpaca device</span>
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        telescopeClient.Connected = <span class="highlight-keyword">true</span>;
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-comment">// Record some information</span>
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        logger.LogMessage(<span class="highlight-literal">"ManualClient"</span>, $<span class="highlight-literal">"Found device: {telescopeClient.Name} - Driver: {telescopeClient.DriverInfo}, Version: {telescopeClient.DriverVersion} Telescope is tracking: {telescopeClient.Tracking}."</span>);
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-comment">// Disconnect from the filter wheel</span>
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        telescopeClient.Connected = <span class="highlight-keyword">false</span>;
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre></div></div></div></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Other Resources</h4><div><a href="833dd117-2e34-412d-8d52-4f3fd2dee3b1.htm">Terminology: The difference between Alpaca Devices and ASCOM Devices</a></div></div></div></div><div id="PageFooter" class="pageFooter">Version 1.0.52<p><a href="www.ascom-standards.org" target="_blank" rel="noopener noreferrer">Copyright © 2021 - 2022 ASCOM Initiative</a></p></div></body></html>