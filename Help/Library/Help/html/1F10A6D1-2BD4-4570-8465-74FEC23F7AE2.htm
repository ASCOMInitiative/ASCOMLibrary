<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>How to make Alpaca devices and COM drivers appear the same</title><meta name="Microsoft.Help.Id" content="1F10A6D1-2BD4-4570-8465-74FEC23F7AE2" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Description" content="This topic addresses the requirement that &quot;client applications are able to support use of both Alpaca devices and COM drivers through a single application code path&quot;. i.e." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">ASCOM Library<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/3e0a4970-b422-4427-bb1e-789bb79e1b4f.htm" title="ASCOM Library" tocid="roottoc">ASCOM Library</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/3e0a4970-b422-4427-bb1e-789bb79e1b4f.htm" title="Introduction" tocid="3e0a4970-b422-4427-bb1e-789bb79e1b4f">Introduction</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/cf197185-7fa2-4b56-bb1a-75aaebd459bb.htm" title="Version History" tocid="cf197185-7fa2-4b56-bb1a-75aaebd459bb">Version History</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/448ecc79-4087-401f-97ca-3e2af8022a62.htm" title="What is in each ASCOM Library package" tocid="448ecc79-4087-401f-97ca-3e2af8022a62">What is in each ASCOM Library package</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/d0969e72-58ac-4f66-b725-8147769b8c5f.htm" title="Asynchronous Library Methods (async await)" tocid="20730441-c717-4b28-8bd5-fc955fc2bf81">Asynchronous Library Methods (async await)</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/822398fe-b7bc-4024-a1fd-f654bfe79771.htm" title="How to discover Alpaca devices (polling and events)" tocid="822398fe-b7bc-4024-a1fd-f654bfe79771">How to discover Alpaca devices (polling and events)</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/12148518-094b-48a0-a947-05b4d987c037.htm" title="How to create clients for discovered Alpaca devices" tocid="12148518-094b-48a0-a947-05b4d987c037">How to create clients for discovered Alpaca devices</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="../html/1F10A6D1-2BD4-4570-8465-74FEC23F7AE2.htm" title="How to make Alpaca devices and COM drivers appear the same" tocid="1F10A6D1-2BD4-4570-8465-74FEC23F7AE2">How to make Alpaca devices and COM drivers appear the same</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/12358d8f-2ed9-4144-95a1-f23df8b29ab5.htm" title="How to let the user select an Alpaca device" tocid="12358d8f-2ed9-4144-95a1-f23df8b29ab5">How to let the user select an Alpaca device</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/833dd117-2e34-412d-8d52-4f3fd2dee3b1.htm" title="Terminology: The difference between Alpaca Devices and ASCOM Devices" tocid="833dd117-2e34-412d-8d52-4f3fd2dee3b1">Terminology: The difference between Alpaca Devices and ASCOM Devices</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_ASCOMLibrary.htm" title="ASCOM Library APIs" tocid="R_Project_ASCOMLibrary">ASCOM Library APIs</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>How to make Alpaca devices and COM drivers appear the same</h1></td></tr></table><div><p>
				This topic addresses the requirement that "client applications are able to support use of both Alpaca devices and COM drivers through a single application code path". i.e. that, after
				selection, the application is unaware of whether it is working with an Alpaca device or a COM driver.
			</p></div><div class="collapsibleAreaRegion" id="WorkingWithDevices"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBAB')" onkeypress="SectionExpandCollapse_CheckKey('IDBAB', event)" tabindex="0"><img id="IDBABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Working with Alpaca devices and ASCOM COM Drivers in the same application.</span></div><div id="IDBABSection" class="collapsibleSection"><p>
					Alpaca devices and COM drivers will always need to be identified independently because they have very different discovery mechanics: Profile/COM for COM drivers and
					Alpaca Discovery for Alpaca devices.
				</p><p>
					However, once a required device is identified, the question becomes "how do I wrap up this object so that I can have a single path
					through my application that doesn't care whether the user selected an Alpaca device or a COM driver. The answer to this question is to use the Library's Alpaca client and COM client toolkits to wrap
					the Alpaca device or COM driver.
				</p><p>
					The following section uses the ASCOM Rotator device type as an example.
				</p><p>
					Both of the toolkits' Rotator classes implement the IRotatorV3 interface.
					So, if you define an application variable of type IRotatorV3, you can store either an Alpaca client instance or a COM client instance in that variable.
					This will give you have a strongly typed variable that exposes all of the rotator's properties and methods and which your application can use as necessary.
				</p><p>
					From this point on the application will never need to know whether it is working with an Alpaca device or a COM device.
				</p><p>
					The following example shows this approach in practice.
					<div id="IDBFBBAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDBFBBAB_tab1" class="codeSnippetContainerTabSingle">Seamless client access</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDBFBBAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDBFBBAB');return false;" title="Copy">Copy</a></div></div><div id="IDBFBBAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// This example intentionally avoids using statements to illustrate use of the ASCOM Library namespaces</span>
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Define an IRotatorV3 variable that can hold both an Alpaca toolkit object and a COM client toolkit object</span>
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>ASCOM.Common.DeviceInterfaces.IRotatorV3 rotator;
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Define a COM client toolkit object</span>
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>ASCOM.Com.DriverAccess.Rotator comRotator;
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Define an Alpaca client toolkit object</span>
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>ASCOM.Alpaca.Clients.AlpacaRotator alpacaRotator;
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Create and activate a TraceLogger device to receive operational information from the Library components</span>
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>ASCOM.Tools.TraceLogger logger = <span class="highlight-keyword">new</span> ASCOM.Tools.TraceLogger(<span class="highlight-literal">"ToolkitTester"</span>, <span class="highlight-keyword">true</span>);
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>logger.SetMinimumLoggingLevel(ASCOM.Common.Interfaces.LogLevel.Verbose);
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>logger.LogMessage(<span class="highlight-literal">"Main"</span>, <span class="highlight-literal">"Created trace logger OK"</span>);
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Set some arbitrary Alpaca device configuration values</span>
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">string</span> deviceIpAddress = <span class="highlight-literal">"127.0.0.1"</span>; <span class="highlight-comment">// Device IP address</span>
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">int</span> deviceIpPort = <span class="highlight-number">11111</span>; <span class="highlight-comment">// Device's IP port number</span>
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">int</span> remoteDeviceNumber = <span class="highlight-number">0</span>; <span class="highlight-comment">// This rotator's device number on the Alpaca device</span>
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">bool</span> strictCasing = <span class="highlight-keyword">true</span>; <span class="highlight-comment">// Require the decide to strictly adhere to the Alpaca protocol name casing rules</span>
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>Console.WriteLine($<span class="highlight-literal">"Chosen Alpaca device: {deviceIpAddress}:{deviceIpPort}/api/v1/rotator/{remoteDeviceNumber}"</span>);
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Create an Alpaca client to represent the an Alpaca device</span>
<span class="highlight-lineno">25</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>alpacaRotator = <span class="highlight-keyword">new</span> ASCOM.Alpaca.Clients.AlpacaRotator(ASCOM.Common.Alpaca.ServiceType.Http, deviceIpAddress, deviceIpPort, remoteDeviceNumber, strictCasing, logger);
<span class="highlight-lineno">26</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">27</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Assign the Alpaca client object to the IRotatorV3 variable and use it </span>
<span class="highlight-lineno">28</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>rotator = alpacaRotator;
<span class="highlight-lineno">29</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>rotator.Connected = <span class="highlight-keyword">true</span>;
<span class="highlight-lineno">30</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">string</span> driverVersion = rotator.DriverVersion;
<span class="highlight-lineno">31</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>Console.WriteLine($<span class="highlight-literal">"Alpaca device driver version: {driverVersion}\r\n"</span>);
<span class="highlight-lineno">32</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">33</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>rotator.Connected = <span class="highlight-keyword">false</span>;
<span class="highlight-lineno">34</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>rotator.Dispose();
<span class="highlight-lineno">35</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">36</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Create an arbitrary COM device ProgID</span>
<span class="highlight-lineno">37</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">string</span> deviceProgId = <span class="highlight-literal">"ASCOM.Simulator.Rotator"</span>;
<span class="highlight-lineno">38</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>Console.WriteLine($<span class="highlight-literal">"Chosen COM device: {deviceProgId}"</span>);
<span class="highlight-lineno">39</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">40</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Create a COM client toolkit object to represent the rotator driver</span>
<span class="highlight-lineno">41</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>comRotator = <span class="highlight-keyword">new</span> ASCOM.Com.DriverAccess.Rotator(deviceProgId);
<span class="highlight-lineno">42</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">43</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Assign the COM client object to the IRotatorV3 variable and use it </span>
<span class="highlight-lineno">44</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>rotator = comRotator;
<span class="highlight-lineno">45</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>rotator.Connected = <span class="highlight-keyword">true</span>;
<span class="highlight-lineno">46</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">string</span> description = rotator.Description;
<span class="highlight-lineno">47</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>Console.WriteLine($<span class="highlight-literal">"COM device description: {description}"</span>);
<span class="highlight-lineno">48</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">49</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>rotator.Connected = <span class="highlight-keyword">false</span>;
<span class="highlight-lineno">50</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>rotator.Dispose();</pre></div></div></div></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Other Resources</h4><div><a href="833dd117-2e34-412d-8d52-4f3fd2dee3b1.htm">Terminology: The difference between Alpaca Devices and ASCOM Devices</a></div></div></div></div><div id="PageFooter" class="pageFooter">Version 1.0.52<p><a href="www.ascom-standards.org" target="_blank" rel="noopener noreferrer">Copyright © 2021 - 2022 ASCOM Initiative</a></p></div></body></html>